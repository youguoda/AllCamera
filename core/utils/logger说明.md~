logger.py文件是一个日志管理模块，提供了统一的日志记录功能(从而不需要在各个模块中重复定义)。
## 主要组件和功能：

1. **LoggerSignals类**

* 继承自QObject，用于在Qt UI中显示日志
* 定义了log\_message信号，用于发送日志级别和内容

2. **Logger类（核心类）**

* 使用单例模式实现，确保全局只有一个日志实例
* 主要功能：

  * 支持控制台输出
  * 支持文件输出（可配置文件大小和备份数量）默认日志文件名为 app_YYYYMMDD.log。
  * 支持UI显示（通过Qt信号）
* 支持的日志级别：

  * debug：调试信息
  * info：一般信息
  * warning：警告信息
  * error：错误信息
  * exception：异常信息（包含堆栈）
  * critical：严重错误

3. **工具函数**

* `setup_logger()`：设置并返回logger实例
* `get_logger()`：获取全局logger实例

4. **主要特性**

* 日志格式：`时间 [级别] [文件名:行号] - 消息内容`
* 支持日志文件自动轮转（默认最大10MB，保留10个备份）
* 支持同时输出到控制台、文件和UI
* 线程安全（使用Python自带的logging模块）

使用示例：